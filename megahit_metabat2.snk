import os, glob, json

# configfile: "config_binning.json"
# snakemake -s binning.snk --configfile res_assembly/config_binning.json -d res_binning --use-conda --cores 18 --resources mem_mb=60000

# ----------------------------------------------------------------------------------------------------
# ADD THE MEGAHIT ASSEMBLY IN THE PROCESS

for sample, sdata in config.items():
    sdata['assembly'] = f'assembly/completed/megahit/{sample}.fa'

# config = {sample: config[sample] for sample in list(config)[:3]}

# ----------------------------------------------------------------------------------------------------
# UPDATE THIS PART WITH YOUR CONFIGURATION

config['softparams'] = {
        'gunc_db' : "/mnt/volume1/Projects/MAGBinning/database/gunc/gunc_db_progenomes2.1.dmnd"
    }

# ----------------------------------------------------------------------------------------------------
# CONDA CONFIGURATION

fname = workflow.source_path('condaenvs.json')
with open(fname) as f:
    config['softparams']['conda'] = json.load(f)

# ----------------------------------------------------------------------------------------------------

rule all:
    input:
        'binning/metabat2/quality_data/raw/tables/bins_info.tsv',
        'binning/maxbin2/quality_data/raw/tables/bins_info.tsv',
        'binning/concoct/quality_data/raw/tables/bins_info.tsv',
        'binning/refined/quality_data/raw/tables/bins_info.tsv',
        'binning/vamb/quality_data/raw/tables/bins_info.tsv',

rule temp_empty:
    output:
        temp(touch('empty_file.tmp'))

# ----------------------------------------------------------------------------------------------------

module assembly:
    snakefile: "workflow/assembly.snk"
    config: config

use rule * from assembly as assembly_*

module mapping:
    snakefile: "workflow/mapping.snk"
    config: config

use rule * from mapping as mapping_*

module concoct:
    snakefile: "workflow/concoct.snk"
    config: config

use rule * from concoct as concoct_*

module maxbin2:
    snakefile: "workflow/maxbin2.snk"
    config: config

use rule * from maxbin2 as maxbin2_*

module metabat2:
    snakefile: "workflow/metabat2.snk"
    config: config

use rule * from metabat2 as metabat2_*

module vamb:
    snakefile: "workflow/vamb.snk"
    config: config

use rule * from vamb as vamb_*

module binrefiner:
    snakefile: "workflow/binrefiner.snk"
    config: config

use rule * from binrefiner as binrefiner_*

module binqual:
    snakefile: "workflow/binqual.snk"
    config: config

use rule * from binqual as binqual_*

module reads_retrieval:
    snakefile: "workflow/reads_retrieval.snk"
    config: config

use rule * from reads_retrieval as reads_retrieval_*

module unicycler:
    snakefile: "workflow/unicycler.snk"
    config: config

use rule * from unicycler as unicycler_*