# Snakemake module to run metabat2 binner

rule preprocessing_cut:
    input:
        'data/assemblies/{sample}/{sample}.assemblies.fa'
    output:
        c10 = "binning/concoct/{sample}/raw/preprocessing/contigs_10K.fa",
        b10 = "binning/concoct/{sample}/raw/preprocessing/contigs_10K.bed"
    conda:
        "env/concoct.yaml"
    shell:
        'cut_up_fasta.py {input} -c 10000 -o 0 --merge_last -b {output.b10} > {output.c10}'

rule preprocessing_cov:
    input:
        bed = "binning/concoct/{sample}/raw/preprocessing/contigs_10K.bed",
        bam = "data/mapping/short/{sample}/{sample}.bam",
        bai = "data/mapping/short/{sample}/{sample}.bam.bai"
    output:
        "binning/concoct/{sample}/raw/preprocessing/coverage_table.tsv",
    conda:
        "env/concoct.yaml"
    shell:
        'concoct_coverage_table.py {input.bed} {input.bam} > {output}'

rule binning:
    input:
        c10 = 'binning/concoct/{sample}/raw/preprocessing/contigs_10K.fa',
        cov = 'binning/concoct/{sample}/raw/preprocessing/coverage_table.tsv'
    output:
        'binning/concoct/{sample}/raw/run/clustering_gt1000.csv'
    params:
        'binning/concoct/{sample}/raw/run/'
    conda:
        "env/concoct.yaml"
    threads:
        8
    shell:
        'concoct --composition_file {input.c10} --coverage_file {input.cov} -b {params} -t {threads}'

rule merge:
    input:
        'binning/concoct/{sample}/raw/run/clustering_gt1000.csv'
    output:
        'binning/concoct/{sample}/raw/run/clustering_merged.csv'
    conda:
        "env/concoct.yaml"
    shell:
        'merge_cutup_clustering.py {input} > {output}'

rule extract:
    input:
        original = 'data/assemblies/{sample}/{sample}.assemblies.fa',
        merge = 'binning/concoct/{sample}/raw/run/clustering_merged.csv'
    output:
        touch('binning/concoct/{sample}/raw/run/check.empty')
    params:
        'binning/concoct/{sample}/raw/run/'
    conda:
        "env/concoct.yaml"
    shell:
        'extract_fasta_bins.py {input.original} {input.merge} --output_path {params}'

rule softlink:
    input:
        "binning/concoct/{sample}/raw/run/check.empty"
    output:
        "binning/concoct/{sample}/raw/binlist.txt"
    params:
        fasta = "binning/concoct/{sample}/raw/run/[0-9]*.fa",
    shell:
        "ls -d $(pwd)/{params.fasta} 1> {output} 2>/dev/null"