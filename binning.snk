import os, glob

# configfile: "config_binning.json"
# snakemake -s binning.snk --configfile res_assembly/config_binning.json -d res_binning --use-conda --cores 18 --resources mem_mb=60000

# ----------------------------------------------------------------------------------------------------

for sample, sdata in config.items():
    for key, fname in sdata.items():
        if not os.path.isfile(fname):
            raise OSError(f'File not found for sample `{sample}`, {key}: `{fname}`')

# ----------------------------------------------------------------------------------------------------

# UPDATE THIS PART WITH YOUR CONFIGURATION
config['softparams'] = {
        'gunc_db' : "/mnt/volume1/Projects/MAGBinning/database/gunc/gunc_db_progenomes2.1.dmnd"
    }

# ----------------------------------------------------------------------------------------------------

BINNERS = ('metabat2', 'maxbin2', 'concoct')
CONDAENV = ('bamtools', 'biopy', 'checkm', 'concoct', 'gunc', 'mapping', 'maxbin2', 'megahit', 'metabat2', 'rna_tools', 'unicycler')

rule all:
    input:
        #'binning/refined/quality_data/raw/tables/bins_info.tsv',
        'binning/minimap2/quality_data/raw/tables/bins_info.tsv',
        expand('workflow/conda_used/{condaenv}.yaml', condaenv=CONDAENV)

rule conda_export_env:
    output:
        'workflow/conda_used/{condaenv}.yaml'
    conda:
        'workflow/envs/{condaenv}.yaml'
    shell:
        'conda env export > {output}'

rule temp_empty:
    output:
        temp(touch('empty_file.tmp'))

# ----------------------------------------------------------------------------------------------------       

# Import modules

module mapping:
    snakefile: "workflow/mapping.snk"
    config: config

use rule * from mapping as mapping_*

module concoct:
    snakefile: "workflow/concoct.snk"

use rule * from concoct as concoct_*

module maxbin2:
    snakefile: "workflow/maxbin2.snk"

use rule * from maxbin2 as maxbin2_*

module metabat2:
    snakefile: "workflow/metabat2.snk"

use rule * from metabat2 as metabat2_*

module binrefiner:
    snakefile: "workflow/binrefiner.snk"
    config: config

use rule * from binrefiner as binrefiner_*

module binqual:
    snakefile: "workflow/binqual.snk"
    config: config

use rule * from binqual as binqual_*

module reads_retrieval:
    snakefile: "workflow/reads_retrieval.snk"
    config: config

use rule * from reads_retrieval as reads_retrieval_*

module unicycler:
    snakefile: "workflow/unicycler.snk"
    config: config

use rule * from unicycler as unicycler_*