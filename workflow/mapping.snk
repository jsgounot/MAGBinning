from pathlib import Path

# mapping process

rule assemblies_softlink:
    input:
        lambda wc: config[wc.sample]["assembly"]
    output :
        "data/assemblies/{sample}/{sample}.assemblies.fa"
    params:
        abspath = lambda wc: Path(config[wc.sample]["assembly"]).absolute()
    shell:
        "ln -s {params.abspath} {output}"

rule filter_assembly_1k:
    input:
        'data/assemblies/{sample}/{sample}.assemblies.fa'
    output:
        'data/assemblies/{sample}/{sample}.assemblies.1k.fa'
    params:
        minsize = 1000
    conda:
        config['softparams']['conda']['biopy']
    script:
        'scripts/filter_fasta.py'

rule bwa_index:
    input:
        "data/assemblies/{sample}/{sample}.assemblies.fa"
    output:
        multiext("data/assemblies/{sample}/{sample}.assemblies.fa", ".amb", ".ann", ".bwt", ".pac", ".sa")
    conda:
        config['softparams']['conda']['bwa']
    log:
        "logs/{sample}.assembly.mapping.log"
    shell:
        "bwa index {input} 2> {log}"

rule sr_bwa_mapping:
    input:
        fasta = "data/assemblies/{sample}/{sample}.assemblies.fa",
        index = "data/assemblies/{sample}/{sample}.assemblies.fa.amb",
        r1 = lambda wc: config[wc.sample]["r1"],
        r2 = lambda wc: config[wc.sample]["r2"]
    output:
        # temp("data/assemblies/{sample}/{sample}.bam")
        "data/mapping/short/{sample}/{sample}.bam"
    conda:
        config['softparams']['conda']['bwa']
    threads:
        8
    log:
        "logs/{sample}.assembly.mapping.short.log"
    shell:
        "(bwa mem -t {threads} {input.fasta} {input.r1} {input.r2} | samtools view -Sub - | samtools sort --threads {threads} - > {output}) 2>> {log}"

rule nanopore_minimap2_mapping:
    input:
        fasta = 'data/assemblies/{sample}/{sample}.assemblies.fa',
        lr = lambda wc: config[wc.sample]["nanopore"]
    output:
        'data/mapping/long/{sample}/{sample}.bam'
    conda:
        config['softparams']['conda']['minimap2']
    threads:
        8
    resources:
         mem_mb = 10000 #10Gb ~ what I see with my data
    log:
        'logs/{sample}.assembly.mapping.nanopore.log'
    shell:
        '(minimap2 -t {threads} -ax map-ont {input.fasta} {input.lr} | samtools view -Sub - | samtools sort --threads {threads} - > {output}) 2>> {log}'

rule samtools_index:
    input:
        "data/mapping/{kind}/{sample}/{sample}.bam"
    output:
        "data/mapping/{kind}/{sample}/{sample}.bam.bai"
    conda:
        config['softparams']['conda']['samtools']
    shell:
        "samtools index {input}"

rule samtools_coverage:
    input:
        bam = "data/mapping/{kind}/{sample}/{sample}.bam",
        bai = "data/mapping/{kind}/{sample}/{sample}.bam.bai"
    output:
        "data/mapping/{kind}/{sample}/{sample}.coverage.tsv"
    conda:
        config['softparams']['conda']['samtools']
    shell:
        "samtools coverage {input.bam} > {output}"

rule samtools_depth:
    input:
        bam = "data/mapping/{kind}/{sample}/{sample}.bam",
        bai = "data/mapping/{kind}/{sample}/{sample}.bam.bai"
    output:
        "data/mapping/{kind}/{sample}/{sample}.depth.tsv"
    conda:
        config['softparams']['conda']['samtools']
    shell:
        "samtools depth {input.bam} -aa | awk '{{++freq[$1]; sum[$1]+=$3}} END{{for (contig in sum) print contig, sum[contig], freq[contig], sum[contig]/freq[contig]}}' > {output}"